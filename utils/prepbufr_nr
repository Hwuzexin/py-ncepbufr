#!/usr/bin/env python

"""
rewrite prepbufr file, skipping message subsets with restricted data
with no expiration time.

see https://www.nco.ncep.noaa.gov/pmb/docs/restricted_data
and https://www.nco.ncep.noaa.gov/pmb/docs/restricted_data/mesonet

python prepbufr_nr <input bufr> <output bufr>
"""
from __future__ import print_function
import ncepbufr, argparse


# Parse command line args
ap = argparse.ArgumentParser()
ap.add_argument("prepbufr_in", help="path to first input BUFR file")
ap.add_argument("prepbufr_out", help="output BUFR containing data in BUFR 2 that is not in BUFR 1")
ap.add_argument('--verbose', '-v', action='store_true')

MyArgs = ap.parse_args()

prepbufr_in = MyArgs.prepbufr_in
prepbufr_out = MyArgs.prepbufr_out
verbose = MyArgs.verbose

# input and output file names from command line args.
if prepbufr_in == prepbufr_out:
    raise IOError('cannot overwrite input prepbufr file')

# open bufr input file.
bufrin = ncepbufr.open(prepbufr_in)

# open output bufr file using same prepbufr table.
bufrout = ncepbufr.open(prepbufr_out,'w',bufrin)

# mnemonic to extract data from subset headers.
hdstr='RSRD EXPRSRD TYP'

nmsg = 0
nskip = 0
while bufrin.advance() == 0: # loop over messages.
    nmsg += 1
    bufrout.open_message(bufrin.msg_type,bufrin.msg_date) # open message
    #print(nmsg,bufrin.msg_type,bufrin.msg_date)
    while bufrin.load_subset() == 0: # loop over subsets in message.
        # read subset header from bufrin
        hdr = (bufrin.read_subset(hdstr).squeeze()).filled(0)
        rsrd = int(hdr[0]); exprsrd = int(hdr[1]); typ = int(hdr[2])
# rs_bitstring - see https://www.nco.ncep.noaa.gov/pmb/docs/restricted_data/mesonet/
# if the first bit is 1 - no redistribution
# 2nd bit: can redistribute to any US govt agency
# 3rd bit: can redistribute to any US research group
# 4th bit: can redistribute to any US educational institution
# 5th bit: can redistribute within NOAA
# exprsrd - expiration of restriction (hours)
        rs_bitstring =  "{0:b}".format(rsrd)
        # skip restricted data with no expiration time
        if rsrd != 0 and exprsrd == 0 : 
            nskip += 1
            if verbose:
                print('skipping ob of type %s with restricted data flags %s' % (typ,rs_bitstring[0:5]))
            continue
        # copy entire subset from bufrin to bufrout and write to message.
        bufrout.copy_subset(bufrin)
    bufrout.close_message() # close message

# close files.
if nskip > 0: print('%s skipped %s subsets' % (bufrin.msg_date,nskip))
bufrin.close(); bufrout.close()
